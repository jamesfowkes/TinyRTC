{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"m_",
				"m_Text"
			],
			[
				"TestForP",
				"TestForParseSuccess"
			],
			[
				"Get",
				"GetNextFreeNode"
			],
			[
				"s_fr",
				"s_freeNodeIndex"
			],
			[
				"s_",
				"s_freeNodeIndex"
			],
			[
				"me",
				"m_errorText"
			],
			[
				"pr",
				"Parser"
			],
			[
				"read",
				"readBytes"
			],
			[
				"TEST_ASS",
				"TEST_ASSERT_TRUE"
			],
			[
				"str",
				"stripCRLF"
			],
			[
				"TEST",
				"TEST_MAKEFILE"
			],
			[
				"fil",
				"filename"
			],
			[
				"for",
				"forWrite"
			],
			[
				"s_fil",
				"s_filePaths"
			],
			[
				"GPS",
				"GPS_DATA"
			],
			[
				"ino",
				"inoFiles"
			],
			[
				"dir",
				"directory"
			],
			[
				"ex",
				"expectedDirName"
			],
			[
				"line",
				"lineBuffer"
			],
			[
				"pri",
				"print"
			],
			[
				"pro",
				"project_id"
			]
		]
	},
	"buffers":
	[
		{
			"file": "syntax_parser.test.cpp",
			"settings":
			{
				"buffer_size": 1361,
				"line_ending": "Windows"
			}
		},
		{
			"file": "syntax_parser.c",
			"settings":
			{
				"buffer_size": 8108,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 13 files for \"double\"\n\nC:\\GitHub\\TinyRTC\\.gitignore:\n   37  \n   38  .DS_Store\n   39: .AppleDouble\n   40  .LSOverride\n   41  \n\nC:\\GitHub\\TinyRTC\\syntax_parser.c:\n   21  static void SkipWhitespaces(Parser * parser);\n   22  static void GetNextToken(Parser * parser);\n   23: static double GetNumber(Parser * parser);\n   24  static ASTNode* CreateNode(Parser * parser, ASTNodeType type, ASTNode* left, ASTNode* right);\n   25  static ASTNode* CreateUnaryNode(Parser * parser, ASTNode* left);\n   26: static ASTNode* CreateNodeBool(Parser * parser, double value);\n   27  static ASTNode* GetNextFreeNode(Parser * parser);\n   28  static bool EvaluateSubtree(ASTNode* ast);\n   ..\n  106  {\n  107      ASTNode* node;\n  108:     double value;\n  109  \n  110      ON_PARSER_ERROR_EXIT_EARLY_WITH_RTN(parser, NULL);\n\nC:\\GitHub\\TinyRTC\\syntax_parser.h:\n   14  {\n   15     TokenType    Type;\n   16:    double       Value;\n   17     char     Symbol;\n   18  };\n\nC:\\GitHub\\TinyRTC\\syntax_parser_old.c:\n   20  static void SkipWhitespaces(Parser * parser);\n   21  static void GetNextToken(Parser * parser);\n   22: static double GetNumber(Parser * parser);\n   23  static ASTNode* CreateNode(Parser * parser, ASTNodeType type, ASTNode* left, ASTNode* right);\n   24  static ASTNode* CreateUnaryNode(Parser * parser, ASTNode* left);\n   25: static ASTNode* CreateNodeNumber(Parser * parser, double value);\n   26  static ASTNode* GetNextFreeNode(Parser * parser);\n   27: static double EvaluateSubtree(ASTNode* ast);\n   28  \n   29  static ASTNode s_freeNodes[MAX_NODE_NUMBER];\n   ..\n  103  {\n  104      ASTNode* node;\n  105:     double value;\n  106  \n  107      ON_PARSER_ERROR_EXIT_EARLY_WITH_RTN(parser, NULL);\n  ...\n  159  }\n  160  \n  161: static ASTNode* CreateNodeNumber(Parser * parser, double value)\n  162  {\n  163      ASTNode* node = GetNextFreeNode(parser);\n  ...\n  259  }\n  260  \n  261: static double GetNumber(Parser * parser)\n  262  {\n  263      ON_PARSER_ERROR_EXIT_EARLY_WITH_RTN(parser, 0.0);\n  ...\n  282  }\n  283  \n  284: static double EvaluateSubtree(ASTNode* ast)\n  285  {\n  286      if(ast == NULL) { return 0.0; }\n  ...\n  296      else \n  297      {\n  298:         double v1 = EvaluateSubtree(ast->Left);\n  299:         double v2 = EvaluateSubtree(ast->Right);\n  300          switch(ast->Type)\n  301          {\n  ...\n  310  }\n  311  \n  312: double Evaluate(ASTNode* ast)\n  313  {\n  314      if(ast == NULL) { return 0.0; }\n\nC:\\GitHub\\TinyRTC\\syntax_parser_old.h:\n   15  {\n   16     TokenType    Type;\n   17:    double       Value;\n   18     char     Symbol;\n   19  };\n   ..\n   42  {\n   43     ASTNodeType Type;\n   44:    double      Value;\n   45     ASTNode*    Left;\n   46     ASTNode*    Right;\n\n17 matches across 5 files\n\n\nSearching 13 files for \"double\"\n\nC:\\GitHub\\TinyRTC\\.gitignore:\n   37  \n   38  .DS_Store\n   39: .AppleDouble\n   40  .LSOverride\n   41  \n\nC:\\GitHub\\TinyRTC\\syntax_parser.c:\n   21  static void SkipWhitespaces(Parser * parser);\n   22  static void GetNextToken(Parser * parser);\n   23: static double GetNumber(Parser * parser);\n   24  static ASTNode* CreateNode(Parser * parser, ASTNodeType type, ASTNode* left, ASTNode* right);\n   25  static ASTNode* CreateUnaryNode(Parser * parser, ASTNode* left);\n   26: static ASTNode* CreateNodeBool(Parser * parser, double value);\n   27  static ASTNode* GetNextFreeNode(Parser * parser);\n   28  static bool EvaluateSubtree(ASTNode* ast);\n   ..\n  106  {\n  107      ASTNode* node;\n  108:     double value;\n  109  \n  110      ON_PARSER_ERROR_EXIT_EARLY_WITH_RTN(parser, NULL);\n\nC:\\GitHub\\TinyRTC\\syntax_parser.h:\n   14  {\n   15     TokenType    Type;\n   16:    double       Value;\n   17     char     Symbol;\n   18  };\n\nC:\\GitHub\\TinyRTC\\syntax_parser_old.c:\n   20  static void SkipWhitespaces(Parser * parser);\n   21  static void GetNextToken(Parser * parser);\n   22: static double GetNumber(Parser * parser);\n   23  static ASTNode* CreateNode(Parser * parser, ASTNodeType type, ASTNode* left, ASTNode* right);\n   24  static ASTNode* CreateUnaryNode(Parser * parser, ASTNode* left);\n   25: static ASTNode* CreateNodeNumber(Parser * parser, double value);\n   26  static ASTNode* GetNextFreeNode(Parser * parser);\n   27: static double EvaluateSubtree(ASTNode* ast);\n   28  \n   29  static ASTNode s_freeNodes[MAX_NODE_NUMBER];\n   ..\n  103  {\n  104      ASTNode* node;\n  105:     double value;\n  106  \n  107      ON_PARSER_ERROR_EXIT_EARLY_WITH_RTN(parser, NULL);\n  ...\n  159  }\n  160  \n  161: static ASTNode* CreateNodeNumber(Parser * parser, double value)\n  162  {\n  163      ASTNode* node = GetNextFreeNode(parser);\n  ...\n  259  }\n  260  \n  261: static double GetNumber(Parser * parser)\n  262  {\n  263      ON_PARSER_ERROR_EXIT_EARLY_WITH_RTN(parser, 0.0);\n  ...\n  282  }\n  283  \n  284: static double EvaluateSubtree(ASTNode* ast)\n  285  {\n  286      if(ast == NULL) { return 0.0; }\n  ...\n  296      else \n  297      {\n  298:         double v1 = EvaluateSubtree(ast->Left);\n  299:         double v2 = EvaluateSubtree(ast->Right);\n  300          switch(ast->Type)\n  301          {\n  ...\n  310  }\n  311  \n  312: double Evaluate(ASTNode* ast)\n  313  {\n  314      if(ast == NULL) { return 0.0; }\n\nC:\\GitHub\\TinyRTC\\syntax_parser_old.h:\n   15  {\n   16     TokenType    Type;\n   17:    double       Value;\n   18     char     Symbol;\n   19  };\n   ..\n   42  {\n   43     ASTNodeType Type;\n   44:    double      Value;\n   45     ASTNode*    Left;\n   46     ASTNode*    Right;\n\n17 matches across 5 files\n\n\nSearching 13 files for \"getnumber\"\n\nC:\\GitHub\\TinyRTC\\syntax_parser.c:\n  233      {\n  234          parser->m_crtToken.Type = ID;\n  235:         parser->m_crtToken.Value = GetNumber(parser);\n  236          return;\n  237      }\n\nC:\\GitHub\\TinyRTC\\syntax_parser_old.c:\n   20  static void SkipWhitespaces(Parser * parser);\n   21  static void GetNextToken(Parser * parser);\n   22: static double GetNumber(Parser * parser);\n   23  static ASTNode* CreateNode(Parser * parser, ASTNodeType type, ASTNode* left, ASTNode* right);\n   24  static ASTNode* CreateUnaryNode(Parser * parser, ASTNode* left);\n   ..\n  230      {\n  231          parser->m_crtToken.Type = Number;\n  232:         parser->m_crtToken.Value = GetNumber(parser);\n  233          return;\n  234      }\n  ...\n  259  }\n  260  \n  261: static double GetNumber(Parser * parser)\n  262  {\n  263      ON_PARSER_ERROR_EXIT_EARLY_WITH_RTN(parser, 0.0);\n\nC:\\GitHub\\TinyRTC\\TinyRTC.sublime-workspace:\n  244  			\"Factor\",\n  245  			\"m_errorText\",\n  246: 			\"GetNumber\",\n  247  			\"GetNextToken\",\n  248  			\"m_\",\n  249: 			\"GetNumber\",\n  250  			\"closeFile\",\n  251  			\"close\",\n\n6 matches across 3 files\n\n\nSearching 13 files for \"'-'\"\n\nC:\\GitHub\\TinyRTC\\messaging.c:\n   12      \n   13      valid &= strlen(message) == 17;\n   14:     valid &= message[2] == '-';\n   15:     valid &= message[5] == '-';\n   16      valid &= message[8] == ' ';\n   17      valid &= message[11] == ':';\n\nC:\\GitHub\\TinyRTC\\syntax_parser_old.c:\n  240      {\n  241          case '+': parser->m_crtToken.Type = Plus; break;\n  242:         case '-': parser->m_crtToken.Type = Minus; break;\n  243          case '*': parser->m_crtToken.Type = Mul; break;\n  244          case '/': parser->m_crtToken.Type = Div; break;\n\n3 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 7205,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "syntax_parser.h",
			"settings":
			{
				"buffer_size": 623,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 392.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/GitHub/TinyRTC/syntax_parser_old.c",
		"/C/GitHub/TinyRTC/syntax_parser_old.h",
		"/C/GitHub/TinyRTC/syntax_parser.c",
		"/C/GitHub/TinyRTC/syntax_parser.h",
		"/C/GitHub/DataLogger/libraries/DLTest/Test/DLTest.Mock.LocalStorage.Test.cpp",
		"/C/GitHub/TinyRTC/syntax_parser.test.cpp",
		"/C/GitHub/TinyRTC/messaging.c",
		"/C/GitHub/DataLogger/libraries/DLTest/Test/DLTest.Mock.LocalStorage.Test.mk",
		"/C/GitHub/DataLogger/libraries/makefile",
		"/C/GitHub/DataLogger/libraries/DLTest/DLTest.Mock.LocalStorage.h",
		"/C/GitHub/DataLogger/libraries/DLTest/DLTest.Mock.LocalStorage.cpp",
		"/C/Unity/src/unity.h",
		"/C/GitHub/DataLogger/libraries/DLTest/Test/TempForRead",
		"/C/GitHub/DataLogger/libraries/DLLocalStorage/DLLocalStorage.h",
		"/C/GitHub/DataLogger/libraries/DLLocalStorage/Example/LinkItONE.FileBlaster.Example/LinkItONE.FileBlaster.Example.ino",
		"/C/GitHub/DataLogger/libraries/DLLocalStorage/DLLocalStorage.cpp",
		"/C/GitHub/DataLogger/libraries/DLTest/DL.Test.Mock.LocalStorage.cpp",
		"/C/GitHub/DataLogger/applications/LinkItONE.Crest/app.sd_storage.cpp",
		"/C/GitHub/DataLogger/libraries/DLLocalStorage/Test/DLLocalStorage.Mock.Test.cpp",
		"/C/GitHub/DataLogger/libraries/DLTest/Test/DLLocalStorage.Mock.Test.cpp",
		"/C/GitHub/DataLogger/libraries/DLTest/DL.Test.Mock.delay.cpp",
		"/C/GitHub/DataLogger/libraries/DLTest/DL.Test.Mock.i2c.cpp",
		"/C/GitHub/DataLogger/libraries/DLSensor/Test/DLSensor.ADS1x1x.Test.mk",
		"/C/GitHub/DataLogger/libraries/DLSensor/Test/DLSensor.ADS1x1x.Test.cpp",
		"/C/GitHub/DataLogger/libraries/DLSensor/DLSensor.ADS1x1x.cpp",
		"/C/GitHub/DataLogger/libraries/DLLocalStorage/DLLocalStorage.linkitonesd.h",
		"/C/GitHub/DataLogger/libraries/DLTest/DL.Test.Mock.Local_Storage.cpp",
		"/C/GitHub/DataLogger/libraries/DLLocalStorage/DLLocalStorage.linkitonesd.cpp",
		"/C/GitHub/DataLogger/libraries/DLTime/DLTime.linkitone.cpp",
		"/C/GitHub/DataLogger/libraries/DLGPS/DLGPS.h",
		"/C/GitHub/DataLogger/libraries/DLGPS/DLGPS.linkitone.cpp",
		"/C/GitHub/DataLogger/libraries/DLLocation/DLLocation.linkitone.cpp",
		"/C/GitHub/DataLogger/libraries/DLUtility/DLUtility.Location.cpp",
		"/C/GitHub/DataLogger/libraries/DLGPS/DLGPS.cpp",
		"/C/GitHub/DataLogger/libraries/DLUtility/DLUtility.GPS.cpp",
		"/C/GitHub/DataLogger/verify.linkitone.py",
		"/C/GitHub/DataLogger/applications/LinkItONE.SMSAndGPSAlarm/LinkItONE.SMSAndGPSAlarm.ino",
		"/C/GitHub/DataLogger/libraries/DLSecurity/Example/LinkItONE.Security.Example/LinkItONE.Security.Example.ino",
		"/C/GitHub/DataLogger/libraries/DLUtility/Example/LinkItOne.Readline/LinkItONE.Readline.ino",
		"/C/GitHub/DataLogger/libraries/DLUtility/Test/DLUtility.Time.Test",
		"/C/GitHub/DataLogger/libraries/DLSMS/Example/LinkItONE.Example/LinkItONE.Example.ino",
		"/C/GitHub/DataLogger/libraries/DLUtility/DLUtility.Time.h",
		"/C/GitHub/DataLogger/libraries/DLLocation/DLLocation.h",
		"/C/GitHub/DataLogger/libraries/DLGPS/Test/DLGPS.Test.cpp",
		"/C/Users/James Fowkes/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/C/GitHub/DataLogger/Datalogger.sublime-project",
		"/C/GitHub/DataLogger/libraries/ino_verify.py",
		"/C/GitHub/DataLogger/libraries/DLSettings/Example/LinkItONE.Settings.Reader.Example/LinkItONE.Settings.Reader.Example.ino",
		"/C/GitHub/DataLogger/libraries/DLUtility/DLUtility.Readline.cpp",
		"/C/GitHub/DataLogger/libraries/DLUtility/DLUtility.ReadLine.h",
		"/C/GitHub/DataLogger/libraries/DLUtility/Example/LinkItOne.Readline/LinkItOne.Readline.ino",
		"/C/GitHub/DataLogger/libraries/DLUtility/Test/DLUtility.Readline.Test.cpp",
		"/C/GitHub/DataLogger/libraries/DLSettings/Example/Command Line Example/DLSettings.Reader.Example.cpp",
		"/C/GitHub/DataLogger/libraries/DLSettings/DLSettings.Reader.cpp",
		"/C/GitHub/DataLogger/libraries/DLSettings/Example/Command Line Example/makefile",
		"/C/GitHub/DataLogger/libraries/DLSettings/DLSettings.cpp",
		"/C/GitHub/DataLogger/libraries/DLSettings/DLSettings.h",
		"/C/GitHub/DataLogger/libraries/DLSettings/Example/Command Line Example/datalogger.settings",
		"/C/GitHub/DataLogger/libraries/DLSettings/datalogger.settings",
		"/C/GitHub/DataLogger/libraries/DLService/Example/Command Line Example/makefile",
		"/C/Users/James Fowkes/Documents/pybasecamp/pybasecamp/__init__.py",
		"/C/Users/James Fowkes/Documents/pybasecamp/pybasecamp.sublime-project",
		"/C/Users/James Fowkes/Documents/pybasecamp/pybasecamp/basecamp.tests.py",
		"/C/Users/James Fowkes/Documents/pybasecamp/__init__.py"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"-env/",
			"-env\\*",
			"-env",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"m_crtToken.Type",
			"CreateUnaryNode",
			"'-'",
			"getnumber",
			"double",
			"0.0",
			"CreateNodeNumber",
			"Term",
			"Expression",
			"EvaluateSubtree",
			"CreateNodeNumber",
			"OperatorMul",
			"RUN_TEST(TestForParseFailure(",
			"));",
			"RUN_TEST(TestForParseSuccess",
			");",
			"GetNextToken",
			"GetNextFreeNode",
			"CreateNode",
			"new ASTNode;",
			"s_freeNodeIndex",
			"Expression",
			"Factor",
			"Expression1",
			"Factor",
			"m_errorText",
			"GetNumber",
			"GetNextToken",
			"m_",
			"GetNumber",
			"closeFile",
			"close",
			"INVALID_s_handle",
			"handle",
			"HANDLE",
			"handle",
			"HANDLE",
			"handle",
			"HANDLE",
			"handle",
			"HANDLE",
			"handle",
			"HANDLE",
			"handle",
			"HANDLE",
			"handle",
			"HANDLE",
			"handle",
			"buffer",
			"LocalStorage_GetLocalStorageInterface",
			"s_sdcard",
			"void setup",
			"setup",
			"DL.Test",
			" = 0",
			"s_fileNames",
			"s_sdCard",
			"s_parsedInfo.",
			"GPS_Setup",
			"GPS_GetInfo",
			"GPS_GetGPSTime",
			"GPS_getGPSTime",
			"GPS_UpdateNow",
			"GPS_getGPSTime",
			"GPS_UpdateNow",
			"time",
			"GPS_getGPSTime",
			"GPRMC",
			"GPS_parseGPRMCSentence",
			"GPS_DATA",
			"GPS_parseGPRMCSentence",
			"Location_GetGPSTime",
			"GPS_parseGPRMCSentence",
			"dllocation.gps",
			"fileExists",
			"FileExists",
			"EndOfFile",
			"endOfFile",
			"ReadLineWithReadFunction",
			"readOneByteFromFile",
			"FileExists",
			"print"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"readLineWithReadFunction"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "syntax_parser.test.cpp",
					"settings":
					{
						"buffer_size": 1361,
						"regions":
						{
						},
						"selection":
						[
							[
								264,
								264
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 3,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 57.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "syntax_parser.c",
					"settings":
					{
						"buffer_size": 8108,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
									[
										2626,
										2637
									]
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								6906,
								6906
							]
						],
						"settings":
						{
							"syntax": "Packages/User/Stino/Arduino.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1787.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"settings":
					{
						"buffer_size": 7205,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										101,
										107
									],
									[
										288,
										294
									],
									[
										551,
										557
									],
									[
										725,
										731
									],
									[
										893,
										899
									],
									[
										1107,
										1113
									],
									[
										1372,
										1378
									],
									[
										1458,
										1464
									],
									[
										1608,
										1614
									],
									[
										1772,
										1778
									],
									[
										1884,
										1890
									],
									[
										2025,
										2031
									],
									[
										2165,
										2171
									],
									[
										2220,
										2226
									],
									[
										2341,
										2347
									],
									[
										2511,
										2517
									],
									[
										2621,
										2627
									],
									[
										2827,
										2833
									],
									[
										3014,
										3020
									],
									[
										3277,
										3283
									],
									[
										3451,
										3457
									],
									[
										3619,
										3625
									],
									[
										3833,
										3839
									],
									[
										4098,
										4104
									],
									[
										4184,
										4190
									],
									[
										4334,
										4340
									],
									[
										4498,
										4504
									],
									[
										4610,
										4616
									],
									[
										4751,
										4757
									],
									[
										4891,
										4897
									],
									[
										4946,
										4952
									],
									[
										5067,
										5073
									],
									[
										5237,
										5243
									],
									[
										5347,
										5353
									],
									[
										5623,
										5632
									],
									[
										5842,
										5851
									],
									[
										6153,
										6162
									],
									[
										6252,
										6261
									],
									[
										6451,
										6460
									],
									[
										6516,
										6525
									],
									[
										6748,
										6751
									],
									[
										6787,
										6790
									],
									[
										7008,
										7011
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								7031,
								7031
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 4,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 4446.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "syntax_parser.h",
					"settings":
					{
						"buffer_size": 623,
						"regions":
						{
						},
						"selection":
						[
							[
								240,
								240
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"dllocal",
				"libraries/DLLocalStorage/DLLocalStorage.h"
			],
			[
				".mk",
				"libraries/DLCSV/Test/DLCSV.Test.mk"
			],
			[
				"local",
				"libraries/DLLocalStorage/DLLocalStorage.linkitonesd.h"
			],
			[
				"dlgps",
				"libraries/DLGPS/DLGPS.h"
			],
			[
				"dlutili",
				"libraries/DLUtility/DLUtility.Location.cpp"
			],
			[
				"dlloca",
				"libraries/DLLocation/DLLocation.linkitone.cpp"
			],
			[
				"dltime",
				"libraries/DLTime/DLTime.linkitone.cpp"
			],
			[
				"exank",
				"libraries/DLSMS/Example/LinkItONE.Example/LinkItONE.Example.ino"
			],
			[
				"sec",
				"libraries/DLSecurity/Example/LinkItONE.Security.Example/LinkItONE.Security.Example.ino"
			],
			[
				"smsa",
				"applications/LinkItONE.SMSAndGPSAlarm/LinkItONE.SMSAndGPSAlarm.ino"
			],
			[
				"readline",
				"libraries/DLUtility/Example/LinkItOne.Readline/LinkItOne.Readline.ino"
			],
			[
				"ino",
				"libraries/ino_verify.py"
			],
			[
				"secu",
				"libraries/DLSecurity/Example/LinkItONE.Security.Example/LinkItONE.Security.Example.ino"
			],
			[
				"location",
				"libraries/DLLocation/DLLocation.h"
			],
			[
				"utility",
				"libraries/DLUtility/DLUtility.Time.h"
			],
			[
				"time",
				"libraries/DLTime/DLTime.linkitone.cpp"
			],
			[
				"dllo",
				"libraries/DLLocalStorage/DLLocalStorage.cpp"
			],
			[
				"sd",
				"libraries/DLLocalStorage/DLLocalStorage.h"
			],
			[
				"user",
				"pybasecamp/user_views.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 360.0,
	"status_bar_visible": true
}
